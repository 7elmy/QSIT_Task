// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using QSIT_Task_2.Models;

namespace QSIT_Task_2.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20210907202257_intial")]
    partial class intial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("QSIT_Task_2.Models.MapConfigurations", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("ClusterRadius")
                        .HasColumnType("float");

                    b.Property<double>("DuplicationEventLocationBuffer")
                        .HasColumnType("float");

                    b.Property<double>("DuplicationEventTimeBuffer")
                        .HasColumnType("float");

                    b.Property<double>("EndEventDuration")
                        .HasColumnType("float");

                    b.Property<bool>("GeoFencing")
                        .HasColumnType("bit");

                    b.Property<int>("MapSubTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MapSubTypeId")
                        .IsUnique();

                    b.ToTable("MapConfigurations");
                });

            modelBuilder.Entity("QSIT_Task_2.Models.MapType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.ToTable("MapTypes");
                });

            modelBuilder.Entity("QSIT_Task_2.Models.MapConfigurations", b =>
                {
                    b.HasOne("QSIT_Task_2.Models.MapType", "MapSubType")
                        .WithOne("MapConfigurations")
                        .HasForeignKey("QSIT_Task_2.Models.MapConfigurations", "MapSubTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MapSubType");
                });

            modelBuilder.Entity("QSIT_Task_2.Models.MapType", b =>
                {
                    b.HasOne("QSIT_Task_2.Models.MapType", "ParentMapType")
                        .WithMany("MapSubTyps")
                        .HasForeignKey("ParentId");

                    b.Navigation("ParentMapType");
                });

            modelBuilder.Entity("QSIT_Task_2.Models.MapType", b =>
                {
                    b.Navigation("MapConfigurations");

                    b.Navigation("MapSubTyps");
                });
#pragma warning restore 612, 618
        }
    }
}
